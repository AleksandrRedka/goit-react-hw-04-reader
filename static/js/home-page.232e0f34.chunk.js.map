{"version":3,"sources":["components/services/filmAPI.js","components/ListMovies/ListMovies.js","components/ListMovies/ListMovies.module.css","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","components/HeaderTitle/HeaderTitle.module.css","components/HeaderTitle/HeaderTitle.js","routes/Home.js"],"names":["KEY","BASE_URL","fetchTrendingFilms","axios","get","then","response","data","fetchFilmSearch","query","fetchFilmDetails","id","fetchFilmCast","fetchFilmReviews","withRouter","moviesLinks","path","className","styles","ListMovies","map","movie","key","link","to","pathname","state","prevPage","title","module","exports","_toConsumableArray","arr","Array","isArray","i","arr2","length","iter","Symbol","iterator","Object","prototype","toString","call","from","TypeError","HeaderTitle","headerTitle","HomePage","fetchAPI","results","setState","this","nameMovie","Component"],"mappings":"6GAAA,+LAEMA,EAAM,4CACNC,EAAQ,gCAEDC,EAAqB,kBAChCC,IACGC,IADH,UACUH,EADV,8BACwCD,IACrCK,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAElBC,EAAkB,SAAAC,GAAK,OAClCN,IACGC,IADH,UACUH,EADV,uBACiCD,EADjC,kBAC8CS,EAD9C,YAEGJ,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAElBG,EAAmB,SAAAC,GAAE,OAChCR,IACGC,IADH,UACUH,EADV,iBAC2BU,GAD3B,OACgCX,EADhC,oBAEGK,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAElBK,EAAgB,SAAAD,GAAE,OAC7BR,IACGC,IADH,UACUH,EADV,iBAC2BU,EAD3B,mBACwCX,EADxC,oBAEGK,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAElBM,EAAmB,SAAAF,GAAE,OAChCR,IACGC,IADH,UACUH,EADV,iBAC2BU,EAD3B,mBACwCX,EADxC,oBAEGK,MAAK,SAAAC,GAAQ,OAAIA,EAASC,U,gCC5B/B,mDAgCeO,iBA3BI,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,YAAaC,EAAW,EAAXA,KACjC,OACE,wBAAIC,UAAWC,IAAOC,YACnBJ,EAAYK,KAAI,SAAAC,GAAK,OACpB,wBAAIC,IAAKD,EAAMV,GAAIM,UAAWC,IAAOK,MACnC,kBAAC,IAAD,CACEC,GAAI,CACFC,SAAS,UAAD,OAAYJ,EAAMV,IAC1Be,MAAO,CAAEC,SAAUX,KAHvB,UAKKK,EAAMO,iB,mBCdrBC,EAAOC,QAAU,CAAC,KAAO,2B,gCCEV,SAASC,EAAmBC,GACzC,OCJa,SAA4BA,GACzC,GAAIC,MAAMC,QAAQF,GAAM,CACtB,IAAK,IAAIG,EAAI,EAAGC,EAAO,IAAIH,MAAMD,EAAIK,QAASF,EAAIH,EAAIK,OAAQF,IAC5DC,EAAKD,GAAKH,EAAIG,GAGhB,OAAOC,GDFF,CAAkBJ,IEJZ,SAA0BM,GACvC,GAAIC,OAAOC,YAAYC,OAAOH,IAAkD,uBAAzCG,OAAOC,UAAUC,SAASC,KAAKN,GAAgC,OAAOL,MAAMY,KAAKP,GFGvF,CAAgBN,IGJpC,WACb,MAAM,IAAIc,UAAU,mDHGqC,GAJ3D,mC,mBICAjB,EAAOC,QAAU,CAAC,YAAc,mC,4HCWjBiB,EARK,SAAC,GAAD,IAAGnB,EAAH,EAAGA,MAAH,OAClB,wBAAIX,UAAWC,IAAO8B,aAAcpB,I,4DCAjBqB,E,2MACnBvB,MAAQ,CACNX,YAAa,I,mFAGO,IAAD,OACnBmC,MAA8B7C,MAAK,SAAAE,GAAS,IAClC4C,EAAY5C,EAAZ4C,QACR,EAAKC,SAAS,CAAErC,YAAY,YAAKoC,U,+BAI1B,IACDpC,EAAgBsC,KAAK3B,MAArBX,YACR,OACE,6BACE,kBAAC,EAAD,CAAaa,MAAM,mBACnB,kBAACT,EAAA,EAAD,CAAYJ,YAAaA,EAAauC,UAAU,GAAGtC,KAAK,W,GAjB1BuC","file":"static/js/home-page.232e0f34.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst KEY = '?api_key=cdb8257d9d90538f8e72b60087a26c1c';\nconst BASE_URL = `https://api.themoviedb.org/3/`;\n\nexport const fetchTrendingFilms = () =>\n  axios\n    .get(`${BASE_URL}trending/movie/week${KEY}`)\n    .then(response => response.data);\n\nexport const fetchFilmSearch = query =>\n  axios\n    .get(`${BASE_URL}search/movie${KEY}&query=${query}&page=1`)\n    .then(response => response.data);\n\nexport const fetchFilmDetails = id =>\n  axios\n    .get(`${BASE_URL}movie/${id}${KEY}&language=en-EN`)\n    .then(response => response.data);\n\nexport const fetchFilmCast = id =>\n  axios\n    .get(`${BASE_URL}movie/${id}/credits${KEY}&language=en-EN`)\n    .then(response => response.data);\n\nexport const fetchFilmReviews = id =>\n  axios\n    .get(`${BASE_URL}movie/${id}/reviews${KEY}&language=en-EN`)\n    .then(response => response.data);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link, withRouter } from 'react-router-dom';\nimport styles from './ListMovies.module.css';\n\nconst ListMovies = ({ moviesLinks, path }) => {\n  return (\n    <ul className={styles.ListMovies}>\n      {moviesLinks.map(movie => (\n        <li key={movie.id} className={styles.link}>\n          <Link\n            to={{\n              pathname: `movies/${movie.id}`,\n              state: { prevPage: path },\n            }}\n          >{`${movie.title}`}</Link>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nListMovies.propTypes = {\n  moviesLinks: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n    }),\n  ).isRequired,\n  path: PropTypes.string.isRequired,\n};\n\nexport default withRouter(ListMovies);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"ListMovies_link__3_qnS\"};","import arrayWithoutHoles from \"./arrayWithoutHoles\";\nimport iterableToArray from \"./iterableToArray\";\nimport nonIterableSpread from \"./nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || nonIterableSpread();\n}","export default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  }\n}","export default function _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerTitle\":\"HeaderTitle_headerTitle__3_wAy\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './HeaderTitle.module.css';\n\nconst HeaderTitle = ({ title }) => (\n  <h1 className={styles.headerTitle}>{title}</h1>\n);\n\nHeaderTitle.propTypes = {\n  title: PropTypes.string.isRequired,\n};\n\nexport default HeaderTitle;\n","import React, { Component } from 'react';\nimport HeaderTitle from '../components/HeaderTitle/HeaderTitle';\nimport ListMovies from '../components/ListMovies/ListMovies';\nimport * as fetchAPI from '../components/services/filmAPI';\n\nexport default class HomePage extends Component {\n  state = {\n    moviesLinks: [],\n  };\n\n  componentDidMount () {\n    fetchAPI.fetchTrendingFilms().then(data => {\n      const { results } = data;\n      this.setState({ moviesLinks: [...results] });\n    });\n  }\n\n  render () {\n    const { moviesLinks } = this.state;\n    return (\n      <div>\n        <HeaderTitle title='Trending today' />\n        <ListMovies moviesLinks={moviesLinks} nameMovie='' path='/' />\n      </div>\n    );\n  }\n}\n"],"sourceRoot":""}