{"version":3,"sources":["components/services/filmAPI.js","../node_modules/shortid/lib/alphabet.js","components/ListMovies/ListMovies.js","components/ListMovies/ListMovies.module.css","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","../node_modules/shortid/index.js","../node_modules/shortid/lib/index.js","../node_modules/shortid/lib/random/random-from-seed.js","../node_modules/shortid/lib/build.js","../node_modules/shortid/lib/generate.js","../node_modules/shortid/lib/random/random-byte-browser.js","../node_modules/nanoid/format.browser.js","../node_modules/shortid/lib/is-valid.js","../node_modules/shortid/lib/util/cluster-worker-id-browser.js","components/MoviesSearch/MoviesSearch.module.css","components/MoviesSearch/MoviesSearch.js","routes/MoviesSearch.js"],"names":["KEY","BASE_URL","fetchTrendingFilms","axios","get","then","response","data","fetchFilmSearch","query","fetchFilmDetails","id","fetchFilmCast","fetchFilmReviews","alphabet","previousSeed","shuffled","randomFromSeed","require","ORIGINAL","reset","setCharacters","_alphabet_","length","Error","unique","split","filter","item","ind","arr","lastIndexOf","join","getShuffled","characterIndex","sourceArray","targetArray","r","nextValue","Math","floor","push","splice","shuffle","module","exports","characters","seed","lookup","index","withRouter","moviesLinks","path","className","styles","ListMovies","map","movie","key","link","to","pathname","state","prevPage","title","_defineProperty","obj","value","Object","defineProperty","enumerable","configurable","writable","_toConsumableArray","Array","isArray","i","arr2","iter","Symbol","iterator","prototype","toString","call","from","TypeError","build","isValid","clusterWorkerId","generate","seedValue","worker","workerId","newCharacters","undefined","_seed_","counter","previousSeconds","str","seconds","Date","now","random","format","number","done","loopCounter","pow","randomByte","crypto","window","msCrypto","getRandomValues","size","Uint8Array","bytes","mask","log","LN2","step","ceil","RegExp","replace","test","MoviesSearch","onChange","onSubmit","formSearch","htmlFor","shortId","label","name","placeholder","autoComplete","type","MoviesPage","searchMovie","handleChandleSearch","target","setState","handleSubmitForm","e","props","history","location","preventDefault","fetchAPI","results","search","this","Component"],"mappings":"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","file":"static/js/movies-page.e2cfd4cf.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst KEY = '?api_key=cdb8257d9d90538f8e72b60087a26c1c';\nconst BASE_URL = `https://api.themoviedb.org/3/`;\n\nexport const fetchTrendingFilms = () =>\n  axios\n    .get(`${BASE_URL}trending/movie/week${KEY}`)\n    .then(response => response.data);\n\nexport const fetchFilmSearch = query =>\n  axios\n    .get(`${BASE_URL}search/movie${KEY}&query=${query}&page=1`)\n    .then(response => response.data);\n\nexport const fetchFilmDetails = id =>\n  axios\n    .get(`${BASE_URL}movie/${id}${KEY}&language=en-EN`)\n    .then(response => response.data);\n\nexport const fetchFilmCast = id =>\n  axios\n    .get(`${BASE_URL}movie/${id}/credits${KEY}&language=en-EN`)\n    .then(response => response.data);\n\nexport const fetchFilmReviews = id =>\n  axios\n    .get(`${BASE_URL}movie/${id}/reviews${KEY}&language=en-EN`)\n    .then(response => response.data);\n","'use strict';\n\nvar randomFromSeed = require('./random/random-from-seed');\n\nvar ORIGINAL = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_-';\nvar alphabet;\nvar previousSeed;\n\nvar shuffled;\n\nfunction reset() {\n    shuffled = false;\n}\n\nfunction setCharacters(_alphabet_) {\n    if (!_alphabet_) {\n        if (alphabet !== ORIGINAL) {\n            alphabet = ORIGINAL;\n            reset();\n        }\n        return;\n    }\n\n    if (_alphabet_ === alphabet) {\n        return;\n    }\n\n    if (_alphabet_.length !== ORIGINAL.length) {\n        throw new Error('Custom alphabet for shortid must be ' + ORIGINAL.length + ' unique characters. You submitted ' + _alphabet_.length + ' characters: ' + _alphabet_);\n    }\n\n    var unique = _alphabet_.split('').filter(function(item, ind, arr){\n       return ind !== arr.lastIndexOf(item);\n    });\n\n    if (unique.length) {\n        throw new Error('Custom alphabet for shortid must be ' + ORIGINAL.length + ' unique characters. These characters were not unique: ' + unique.join(', '));\n    }\n\n    alphabet = _alphabet_;\n    reset();\n}\n\nfunction characters(_alphabet_) {\n    setCharacters(_alphabet_);\n    return alphabet;\n}\n\nfunction setSeed(seed) {\n    randomFromSeed.seed(seed);\n    if (previousSeed !== seed) {\n        reset();\n        previousSeed = seed;\n    }\n}\n\nfunction shuffle() {\n    if (!alphabet) {\n        setCharacters(ORIGINAL);\n    }\n\n    var sourceArray = alphabet.split('');\n    var targetArray = [];\n    var r = randomFromSeed.nextValue();\n    var characterIndex;\n\n    while (sourceArray.length > 0) {\n        r = randomFromSeed.nextValue();\n        characterIndex = Math.floor(r * sourceArray.length);\n        targetArray.push(sourceArray.splice(characterIndex, 1)[0]);\n    }\n    return targetArray.join('');\n}\n\nfunction getShuffled() {\n    if (shuffled) {\n        return shuffled;\n    }\n    shuffled = shuffle();\n    return shuffled;\n}\n\n/**\n * lookup shuffled letter\n * @param index\n * @returns {string}\n */\nfunction lookup(index) {\n    var alphabetShuffled = getShuffled();\n    return alphabetShuffled[index];\n}\n\nfunction get () {\n  return alphabet || ORIGINAL;\n}\n\nmodule.exports = {\n    get: get,\n    characters: characters,\n    seed: setSeed,\n    lookup: lookup,\n    shuffled: getShuffled\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link, withRouter } from 'react-router-dom';\nimport styles from './ListMovies.module.css';\n\nconst ListMovies = ({ moviesLinks, path }) => {\n  return (\n    <ul className={styles.ListMovies}>\n      {moviesLinks.map(movie => (\n        <li key={movie.id} className={styles.link}>\n          <Link\n            to={{\n              pathname: `movies/${movie.id}`,\n              state: { prevPage: path },\n            }}\n          >{`${movie.title}`}</Link>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nListMovies.propTypes = {\n  moviesLinks: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n    }),\n  ).isRequired,\n  path: PropTypes.string.isRequired,\n};\n\nexport default withRouter(ListMovies);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"ListMovies_link__3_qnS\"};","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import arrayWithoutHoles from \"./arrayWithoutHoles\";\nimport iterableToArray from \"./iterableToArray\";\nimport nonIterableSpread from \"./nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || nonIterableSpread();\n}","export default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  }\n}","export default function _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}","'use strict';\nmodule.exports = require('./lib/index');\n","'use strict';\n\nvar alphabet = require('./alphabet');\nvar build = require('./build');\nvar isValid = require('./is-valid');\n\n// if you are using cluster or multiple servers use this to make each instance\n// has a unique value for worker\n// Note: I don't know if this is automatically set when using third\n// party cluster solutions such as pm2.\nvar clusterWorkerId = require('./util/cluster-worker-id') || 0;\n\n/**\n * Set the seed.\n * Highly recommended if you don't want people to try to figure out your id schema.\n * exposed as shortid.seed(int)\n * @param seed Integer value to seed the random alphabet.  ALWAYS USE THE SAME SEED or you might get overlaps.\n */\nfunction seed(seedValue) {\n    alphabet.seed(seedValue);\n    return module.exports;\n}\n\n/**\n * Set the cluster worker or machine id\n * exposed as shortid.worker(int)\n * @param workerId worker must be positive integer.  Number less than 16 is recommended.\n * returns shortid module so it can be chained.\n */\nfunction worker(workerId) {\n    clusterWorkerId = workerId;\n    return module.exports;\n}\n\n/**\n *\n * sets new characters to use in the alphabet\n * returns the shuffled alphabet\n */\nfunction characters(newCharacters) {\n    if (newCharacters !== undefined) {\n        alphabet.characters(newCharacters);\n    }\n\n    return alphabet.shuffled();\n}\n\n/**\n * Generate unique id\n * Returns string id\n */\nfunction generate() {\n  return build(clusterWorkerId);\n}\n\n// Export all other functions as properties of the generate function\nmodule.exports = generate;\nmodule.exports.generate = generate;\nmodule.exports.seed = seed;\nmodule.exports.worker = worker;\nmodule.exports.characters = characters;\nmodule.exports.isValid = isValid;\n","'use strict';\n\n// Found this seed-based random generator somewhere\n// Based on The Central Randomizer 1.3 (C) 1997 by Paul Houle (houle@msc.cornell.edu)\n\nvar seed = 1;\n\n/**\n * return a random number based on a seed\n * @param seed\n * @returns {number}\n */\nfunction getNextValue() {\n    seed = (seed * 9301 + 49297) % 233280;\n    return seed/(233280.0);\n}\n\nfunction setSeed(_seed_) {\n    seed = _seed_;\n}\n\nmodule.exports = {\n    nextValue: getNextValue,\n    seed: setSeed\n};\n","'use strict';\n\nvar generate = require('./generate');\nvar alphabet = require('./alphabet');\n\n// Ignore all milliseconds before a certain time to reduce the size of the date entropy without sacrificing uniqueness.\n// This number should be updated every year or so to keep the generated id short.\n// To regenerate `new Date() - 0` and bump the version. Always bump the version!\nvar REDUCE_TIME = 1567752802062;\n\n// don't change unless we change the algos or REDUCE_TIME\n// must be an integer and less than 16\nvar version = 7;\n\n// Counter is used when shortid is called multiple times in one second.\nvar counter;\n\n// Remember the last time shortid was called in case counter is needed.\nvar previousSeconds;\n\n/**\n * Generate unique id\n * Returns string id\n */\nfunction build(clusterWorkerId) {\n    var str = '';\n\n    var seconds = Math.floor((Date.now() - REDUCE_TIME) * 0.001);\n\n    if (seconds === previousSeconds) {\n        counter++;\n    } else {\n        counter = 0;\n        previousSeconds = seconds;\n    }\n\n    str = str + generate(version);\n    str = str + generate(clusterWorkerId);\n    if (counter > 0) {\n        str = str + generate(counter);\n    }\n    str = str + generate(seconds);\n    return str;\n}\n\nmodule.exports = build;\n","'use strict';\n\nvar alphabet = require('./alphabet');\nvar random = require('./random/random-byte');\nvar format = require('nanoid/format');\n\nfunction generate(number) {\n    var loopCounter = 0;\n    var done;\n\n    var str = '';\n\n    while (!done) {\n        str = str + format(random, alphabet.get(), 1);\n        done = number < (Math.pow(16, loopCounter + 1 ) );\n        loopCounter++;\n    }\n    return str;\n}\n\nmodule.exports = generate;\n","'use strict';\n\nvar crypto = typeof window === 'object' && (window.crypto || window.msCrypto); // IE 11 uses window.msCrypto\n\nvar randomByte;\n\nif (!crypto || !crypto.getRandomValues) {\n    randomByte = function(size) {\n        var bytes = [];\n        for (var i = 0; i < size; i++) {\n            bytes.push(Math.floor(Math.random() * 256));\n        }\n        return bytes;\n    };\n} else {\n    randomByte = function(size) {\n        return crypto.getRandomValues(new Uint8Array(size));\n    };\n}\n\nmodule.exports = randomByte;\n","module.exports = function (random, alphabet, size) {\n  var mask = (2 << Math.log(alphabet.length - 1) / Math.LN2) - 1\n  var step = Math.ceil(1.6 * mask * size / alphabet.length)\n  var id = ''\n\n  while (true) {\n    var i = step\n    var bytes = random(i)\n    while (i--) {\n      id += alphabet[bytes[i] & mask] || ''\n      if (id.length === +size) return id\n    }\n  }\n}\n","'use strict';\nvar alphabet = require('./alphabet');\n\nfunction isShortId(id) {\n    if (!id || typeof id !== 'string' || id.length < 6 ) {\n        return false;\n    }\n\n    var nonAlphabetic = new RegExp('[^' +\n      alphabet.get().replace(/[|\\\\{}()[\\]^$+*?.-]/g, '\\\\$&') +\n    ']');\n    return !nonAlphabetic.test(id);\n}\n\nmodule.exports = isShortId;\n","'use strict';\n\nmodule.exports = 0;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formSearch\":\"MoviesSearch_formSearch__1DzHW\",\"label\":\"MoviesSearch_label__3sqWA\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport shortId from 'shortid';\nimport styles from './MoviesSearch.module.css';\n\nconst generateId = () => shortId.generate();\n\nconst MoviesSearch = ({ value, onChange, onSubmit }) => {\n  return (\n    <form onSubmit={onSubmit} className={styles.formSearch}>\n      <label htmlFor={generateId()} className={styles.label}>\n        <input\n          name='searchMovie'\n          value={value}\n          onChange={onChange}\n          placeholder='Enter please movie name'\n          autoComplete='off'\n        />\n      </label>\n      <button type='submit'>Search</button>\n    </form>\n  );\n};\n\nMoviesSearch.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  onSubmit: PropTypes.func.isRequired,\n};\n\nexport default MoviesSearch;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport ListMovies from '../components/ListMovies/ListMovies';\nimport MoviesSearch from '../components/MoviesSearch/MoviesSearch';\nimport * as fetchAPI from '../components/services/filmAPI';\n\nexport default class MoviesPage extends Component {\n  state = {\n    searchMovie: '',\n    moviesLinks: [],\n  };\n\n  static propTypes = {\n    history: PropTypes.shape({\n      push: PropTypes.func.isRequired,\n    }).isRequired,\n    location: PropTypes.shape({\n      pathname: PropTypes.string.isRequired,\n      search: PropTypes.string.isRequired,\n      state: PropTypes.shape({\n        searchValue: PropTypes.string,\n      }),\n    }).isRequired,\n  };\n\n  handleChandleSearch = ({ target }) => {\n    const { name, value } = target;\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  handleSubmitForm = e => {\n    const { searchMovie } = this.state;\n    const { history, location } = this.props;\n    e.preventDefault();\n    fetchAPI.fetchFilmSearch(searchMovie).then(data => {\n      const { results } = data;\n      this.setState({ moviesLinks: [...results] });\n    });\n    history.push({\n      path: location.pathname,\n      search: `query=${searchMovie}`,\n    });\n  };\n\n  render () {\n    const { searchMovie, moviesLinks } = this.state;\n    const { location } = this.props;\n    return (\n      <div>\n        <MoviesSearch\n          value={searchMovie}\n          onChange={this.handleChandleSearch}\n          onSubmit={this.handleSubmitForm}\n        />\n        {moviesLinks.length > 0 && (\n          <ListMovies moviesLinks={moviesLinks} path={location.pathname} />\n        )}\n      </div>\n    );\n  }\n}\n"],"sourceRoot":""}