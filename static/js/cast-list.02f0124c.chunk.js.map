{"version":3,"sources":["components/Paragraph/Paragraph.js","components/Actors/Actors.module.css","components/Actors/Actors.js","components/Cast/Cast.js"],"names":["Paragraph","text","module","exports","Actors","cast","className","styles","list","map","actor","photoActor","key","id","cardActor","cardActorImg","src","alt","name","cardActorInfo","character","Cast","state","this","props","match","params","movieId","fetchAPI","then","data","obj","setState","credit_id","profile_path","length","Component"],"mappings":"6GAAA,oBAQeA,IALG,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OAAc,2BAAIA,K,mBCFpCC,EAAOC,QAAU,CAAC,KAAO,qBAAqB,UAAY,0BAA0B,aAAe,6BAA6B,cAAgB,gC,oJCuCjIC,MApCf,YAA4B,IAATC,EAAQ,EAARA,KACjB,OACE,wBAAIC,UAAWC,IAAOC,MACnBH,EAAKI,KAAI,SAAAC,GACR,OACEA,EAAMC,YACJ,wBAAIC,IAAKF,EAAMG,GAAIP,UAAWC,IAAOO,WACnC,yBAAKR,UAAWC,IAAOQ,cACrB,yBACEC,IAAG,6CAAwCN,EAAMC,YACjDM,IAAKP,EAAMQ,QAGf,yBAAKZ,UAAWC,IAAOY,eACrB,uBAAGb,UAAWC,IAAOa,WAArB,SAAuCV,EAAMU,WAC7C,uBAAGd,UAAWC,IAAOG,OAArB,UAAoCA,EAAMQ,a,wCCd1D,IAUqBG,E,2MACnBC,MAAQ,CACNjB,KAAM,I,mFAGc,IAAD,OACbQ,EAAoBU,KAAKC,MAhBGC,MAAMC,OAAOC,QAiB/CC,IAAuBf,GAAIgB,MAAK,SAAAC,GAfrB,IAAAC,EAgBT,EAAKC,SAAS,CACZ3B,MAjBO0B,EAiBMD,EAAKzB,KAhBjB0B,EAAItB,KAAI,gBAAcI,EAAd,EAAGoB,UAA6BtB,EAAhC,EAAkBuB,aAA6BV,EAA/C,gEACbX,KACAF,cACGa,c,+BAkBM,IACDnB,EAASkB,KAAKD,MAAdjB,KACR,OACE,6BACGA,EAAK8B,OAAS,EACb,kBAAC,EAAD,CAAQ9B,KAAMA,IAEd,kBAACL,EAAA,EAAD,CAAWC,KAAK,sC,GArBQmC","file":"static/js/cast-list.02f0124c.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Paragraph = ({ text }) => <p>{text}</p>;\nParagraph.propTypes = {\n  text: PropTypes.string.isRequired,\n};\n\nexport default Paragraph;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Actors_list__3131B\",\"cardActor\":\"Actors_cardActor__9bTt7\",\"cardActorImg\":\"Actors_cardActorImg__3Kd7w\",\"cardActorInfo\":\"Actors_cardActorInfo__22tR0\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Actors.module.css';\n\nfunction Actors ({ cast }) {\n  return (\n    <ul className={styles.list}>\n      {cast.map(actor => {\n        return (\n          actor.photoActor && (\n            <li key={actor.id} className={styles.cardActor}>\n              <div className={styles.cardActorImg}>\n                <img\n                  src={`https://image.tmdb.org/t/p/original${actor.photoActor}`}\n                  alt={actor.name}\n                />\n              </div>\n              <div className={styles.cardActorInfo}>\n                <p className={styles.character}>Role: {actor.character}</p>\n                <p className={styles.actor}>Actor: {actor.name}</p>\n              </div>\n            </li>\n          )\n        );\n      })}\n    </ul>\n  );\n}\n\nActors.propTypes = {\n  cast: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      photoActor: PropTypes.string,\n      name: PropTypes.string.isRequired,\n      character: PropTypes.string.isRequired,\n    }),\n  ).isRequired,\n};\n\nexport default Actors;\n","import React, { Component } from 'react';\nimport Paragraph from '../Paragraph/Paragraph';\nimport * as fetchAPI from '../services/filmAPI';\nimport Actors from '../Actors/Actors';\n\nconst getIdFromProps = props => props.match.params.movieId;\n\nconst mapper = obj => {\n  return obj.map(({ credit_id: id, profile_path: photoActor, ...props }) => ({\n    id,\n    photoActor,\n    ...props,\n  }));\n};\n\nexport default class Cast extends Component {\n  state = {\n    cast: [],\n  };\n\n  componentDidMount () {\n    const id = getIdFromProps(this.props);\n    fetchAPI.fetchFilmCast(id).then(data => {\n      this.setState({\n        cast: mapper(data.cast),\n      });\n    });\n  }\n\n  render () {\n    const { cast } = this.state;\n    return (\n      <div>\n        {cast.length > 0 ? (\n          <Actors cast={cast} />\n        ) : (\n          <Paragraph text='Sorry, information not found' />\n        )}\n      </div>\n    );\n  }\n}\n"],"sourceRoot":""}